{"version":3,"file":"static/js/307.bc97989c.chunk.js","mappings":"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","sources":["components/styles/NewsItem.styled.ts","components/News/NewsItem.tsx","components/styles/News.styled.ts","components/News/News.tsx","hooks/load-news.ts","pages/News.tsx","api/urls.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledNewsItem = styled.li`\r\n\tbackground-color: aliceblue;\r\n\tborder: 1px solid black;\r\n\tpadding: 10px 25px;\r\n\tborder-radius: 5px;\r\n\tmax-width: 760px;\r\n\ttransition: transform 0.2s ease-out 0s;\r\n\tcursor: pointer;\r\n\r\n\t& h3 {\r\n\t\tfont-size: 24px;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t& p {\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t& div {\r\n\t\ttext-align: right;\r\n\t}\r\n\r\n\t&:hover {\r\n\t\ttransform: scale(1.025);\r\n\t}\r\n\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tpadding: 10px 15px;\r\n\r\n\t\t& h3 {\r\n\t\t\tfont-size: 20px;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n`;\r\n","import { INews } from \"../../types/newsInterface\";\r\nimport { StyledNewsItem } from \"../styles/NewsItem.styled\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useAppDispatch } from \"../../store/hooks\";\r\nimport { deleteNewsItem } from \"../../store/newsSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst NewsItem = ({ item }: { item: INews }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst { t } = useTranslation();\r\n\r\n\tconst deleteItem = () => {\r\n\t\tdispatch(deleteNewsItem(item.id));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledNewsItem>\r\n\t\t\t<h3>{item.title}</h3>\r\n\t\t\t<p>{item.body}</p>\r\n\t\t\t<div>\r\n\t\t\t\t<Button variant=\"contained\" color=\"error\" onClick={deleteItem}>\r\n\t\t\t\t\t{t(\"delete\")}\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</StyledNewsItem>\r\n\t);\r\n};\r\n\r\nexport default NewsItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledNews = styled.div`\r\n\ttext-align: center;\r\n\r\n\t& ul {\r\n\t\ttext-align: left;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 20px;\r\n\t\tmargin: 10px 0;\r\n\t}\r\n\r\n\t& p {\r\n\t\tfont-size: 24px;\r\n\t\tmargin-bottom: 12px;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tul {\r\n\t\t\tgap: 10px;\r\n\t\t}\r\n\t\t& p {\r\n\t\t\tfont-size: 16px;\r\n\t\t}\r\n\t}\r\n`;\r\n","import { memo } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport NewsItem from \"./NewsItem\";\r\nimport { StyledNews } from \"../styles/News.styled\";\r\nimport { useAppSelector } from \"../../store/hooks\";\r\nimport { selectTotalNews } from \"../../store/newsSlice\";\r\nimport { useLoadNews } from \"../../hooks/load-news\";\r\nimport CircularLoading from \"../UI/CircularLoading\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst News = () => {\r\n\tconst totalNews = useAppSelector(selectTotalNews);\r\n\tconst { t } = useTranslation();\r\n\r\n\tconst { fetchNews, fetchPage, error, isLoading } = useLoadNews();\r\n\r\n\tconst hasData = totalNews.length !== 0;\r\n\tconst isMaxPage = fetchPage === 10;\r\n\r\n\tconst dataElement = hasData ? (\r\n\t\t<ul>\r\n\t\t\t{totalNews.map((newsItem) => {\r\n\t\t\t\treturn <NewsItem key={newsItem.id} item={newsItem} />;\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t) : (\r\n\t\t<p>{t(\"no_news\")}</p>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<StyledNews>\r\n\t\t\t{dataElement}\r\n\t\t\t{isLoading && <CircularLoading />}\r\n\t\t\t{error && <p>{t(\"load_news_error\", error)}</p>}\r\n\t\t\t{fetchPage !== 10 && (\r\n\t\t\t\t<Button variant=\"contained\" onClick={fetchNews}>\r\n\t\t\t\t\t{t(\"load_news\")}\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t\t{isMaxPage && !hasData && <p> {t(\"no_more\")}</p>}\r\n\t\t</StyledNews>\r\n\t);\r\n};\r\n\r\nexport default memo(News);\r\n","import { useState } from \"react\";\r\nimport { INews } from \"./../types/newsInterface\";\r\nimport { selectFetchPage } from \"./../store/newsSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"./../store/hooks\";\r\nimport { addNewsSlice, changeFetchPage } from \"../store/newsSlice\";\r\n\r\nexport const useLoadNews = () => {\r\n\tconst fetchPage = useAppSelector(selectFetchPage);\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState(\"\");\r\n\r\n\tconst fetchNews = async () => {\r\n\t\tif (+fetchPage > 10) {\r\n\t\t\tsetError(\"Fetch page limit is 10.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetIsLoading(true);\r\n\t\tsetError(\"\");\r\n\r\n\t\tconst response = await fetch(\r\n\t\t\t`https://jsonplaceholder.typicode.com/users/${fetchPage}/posts`\r\n\t\t);\r\n\t\tif (!response.ok) {\r\n\t\t\tconsole.log(\"ERROR\", response);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tsetError(response.statusText);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst results = (await response.json()) as INews[];\r\n\t\tsetIsLoading(false);\r\n\t\tdispatch(addNewsSlice(results));\r\n\t\tdispatch(changeFetchPage());\r\n\t};\r\n\r\n\treturn { fetchPage, fetchNews, error, isLoading };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { json, useLoaderData } from \"react-router-dom\";\r\nimport { newsURL } from \"../api/urls\";\r\nimport News from \"../components/News/News\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport {\r\n\taddNewsSlice,\r\n\tchangeInitial,\r\n\tselectIsInitial,\r\n} from \"../store/newsSlice\";\r\nimport { INews } from \"../types/newsInterface\";\r\n\r\nconst NewsPage = () => {\r\n\tconst isInitial = useAppSelector(selectIsInitial);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst { t } = useTranslation();\r\n\r\n\tconst news = useLoaderData() as INews[];\r\n\tuseEffect(() => {\r\n\t\tif (isInitial && news) {\r\n\t\t\tdispatch(changeInitial());\r\n\t\t\tdispatch(addNewsSlice(news));\r\n\t\t}\r\n\t}, [news, dispatch, isInitial]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>{t(\"news\")}</h2>\r\n\t\t\t<News />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default NewsPage;\r\n\r\nexport const loader = async () => {\r\n\tconst response = await fetch(newsURL);\r\n\r\n\tif (!response.ok)\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Could not fetch news.\" },\r\n\t\t\t{ status: response.status, statusText: response.statusText }\r\n\t\t);\r\n\r\n\treturn response;\r\n};\r\n","export const newsURL = \"https://jsonplaceholder.typicode.com/users/1/posts\";\r\n"],"names":["StyledNewsItem","styled","_templateObject","_taggedTemplateLiteral","_ref","item","dispatch","useAppDispatch","t","useTranslation","_jsxs","children","_jsx","title","body","Button","variant","color","onClick","deleteNewsItem","id","StyledNews","News","totalNews","useAppSelector","selectTotalNews","_useLoadNews","fetchPage","selectFetchPage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","fetchNews","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","results","wrap","_context","prev","next","abrupt","fetch","concat","sent","ok","console","log","statusText","json","addNewsSlice","changeFetchPage","stop","apply","arguments","useLoadNews","hasData","length","isMaxPage","dataElement","map","newsItem","NewsItem","CircularLoading","memo","isInitial","selectIsInitial","news","useLoaderData","useEffect","changeInitial","_Fragment","loader","message","status"],"sourceRoot":""}