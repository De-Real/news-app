{"version":3,"file":"static/js/372.cfd719c6.chunk.js","mappings":"mMAEaA,E,QAAqBC,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4F,mBC2B7C,EAvBkB,WACjB,IAAQC,GAAMC,EAAAA,EAAAA,MAAND,EACRE,GAA6BC,EAAAA,EAAAA,MAArBC,EAAIF,EAAJE,KAAMC,EAAUH,EAAVG,WAKd,OACCC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,KACjBD,EAAAA,EAAAA,KAACE,EAAAA,EAAa,KACdL,EAAAA,EAAAA,MAACV,EAAkB,CAAAY,SAAA,EAClBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,EAAKQ,WACVH,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,EAAE,QAAS,CAAEK,WAAAA,OACjBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,EAAE,iBACNS,EAAAA,EAAAA,KAAA,KAAAD,UACCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qCAKb,C","sources":["pages/styles/Error.styled.ts","pages/Error.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const StyledErrorWrapper = styled.main`\r\n\t& p {\r\n\t\tfont-size: 20px;\r\n\t\ttext-align: center;\r\n\t\tpadding: 5px 0;\r\n\t}\r\n`;\r\n","import LinearLoading from \"../components/UI/LinearLoading\";\r\nimport HeaderNavigation from \"../layout/HeaderNavigation\";\r\nimport { useRouteError } from \"react-router-dom\";\r\nimport { StyledErrorWrapper } from \"./styles/Error.styled\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ErrorPage = () => {\r\n\tconst { t } = useTranslation();\r\n\tconst { data, statusText } = useRouteError() as {\r\n\t\tdata: { message: string };\r\n\t\tstatusText: string;\r\n\t\tstatus: string;\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HeaderNavigation />\r\n\t\t\t<LinearLoading />\r\n\t\t\t<StyledErrorWrapper>\r\n\t\t\t\t<h3>{data.message}</h3>\r\n\t\t\t\t<p>{t(\"error\", { statusText })}</p>\r\n\t\t\t\t<p>{t(\"error_desc\")}</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<strong>example.ex@sample.org.com</strong>\r\n\t\t\t\t</p>\r\n\t\t\t</StyledErrorWrapper>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ErrorPage;\r\n"],"names":["StyledErrorWrapper","styled","_templateObject","_taggedTemplateLiteral","t","useTranslation","_ref","useRouteError","data","statusText","_jsxs","_Fragment","children","_jsx","HeaderNavigation","LinearLoading","message"],"sourceRoot":""}