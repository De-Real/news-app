{"version":3,"file":"static/js/648.7c9ce6c1.chunk.js","mappings":"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","sources":["components/styles/Login.styled.ts","components/Login/Login.tsx","pages/Login.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { Form } from \"react-router-dom\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 25px;\r\n\tflex: 0 0 425px;\r\n\tpadding: 15px 0;\r\n\r\n\t& p {\r\n\t\tcolor: red;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tflex: 0 1 420px;\r\n\t}\r\n`;\r\n\r\nexport const StyledLoginWrapper = styled.article`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\ttext-align: center;\r\n\t& div {\r\n\t\tfont-size: 20px;\r\n\t\t& span {\r\n\t\t\ttext-decoration: underline;\r\n\t\t\tfont-style: italic;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport { StyledForm, StyledLoginWrapper } from \"../styles/Login.styled\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useActionData, useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../store/hooks\";\r\nimport { logIn } from \"../../store/loginSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ntype ActionResponseType = { error: boolean } | undefined;\r\n\r\nconst Login = () => {\r\n\tconst [showPassword, setShowPassword] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tconst data = useActionData() as ActionResponseType;\r\n\r\n\tconst { t } = useTranslation();\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (typeof data !== \"object\") return;\r\n\r\n\t\tif (data.error) {\r\n\t\t\tsetError(data.error);\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tdispatch(logIn());\r\n\t\t\tnavigate(\"/profile\");\r\n\t\t}\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [data, dispatch]);\r\n\r\n\tconst handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n\tconst handleMouseDownPassword = (\r\n\t\tevent: React.MouseEvent<HTMLButtonElement>\r\n\t) => {\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledLoginWrapper>\r\n\t\t\t<h2> {t(\"signIn\")}</h2>\r\n\t\t\t<div>\r\n\t\t\t\t<p>{t(\"signIn_text\")}</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{t(\"signIn_login\")}: <span>admin</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{t(\"signIn_password\")}: <span>12345</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<StyledForm method=\"post\">\r\n\t\t\t\t<TextField\r\n\t\t\t\t\terror={error}\r\n\t\t\t\t\tid=\"outlined-error-helper-text\"\r\n\t\t\t\t\tlabel={t(\"signIn_login\")}\r\n\t\t\t\t\tdefaultValue={\"\"}\r\n\t\t\t\t\tname=\"login\"\r\n\t\t\t\t/>\r\n\t\t\t\t<FormControl variant=\"outlined\" error={error}>\r\n\t\t\t\t\t<InputLabel htmlFor=\"outlined-adornment-password\">\r\n\t\t\t\t\t\t{t(\"signIn_password\")}\r\n\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\tid=\"outlined-adornment-password\"\r\n\t\t\t\t\t\tdefaultValue={\"\"}\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\ttype={showPassword ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword}\r\n\t\t\t\t\t\t\t\t\tonMouseDown={handleMouseDownPassword}\r\n\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{showPassword ? <VisibilityOff /> : <Visibility />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormControl>\r\n\t\t\t\t{error && <p>{t(\"signIn_error\")}</p>}\r\n\t\t\t\t<Button type=\"submit\" variant=\"contained\">\r\n\t\t\t\t\t{t(\"submit\")}\r\n\t\t\t\t</Button>\r\n\t\t\t</StyledForm>\r\n\t\t</StyledLoginWrapper>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { ActionFunctionArgs } from \"react-router-dom\";\r\nimport Login from \"../components/Login/Login\";\r\n\r\nconst LoginPage = () => {\r\n\treturn <Login />;\r\n};\r\n\r\nexport default LoginPage;\r\n\r\nexport const action = async ({ request }: ActionFunctionArgs) => {\r\n\tconst data = await request.formData();\r\n\r\n\tconst authData = {\r\n\t\tlogin: data.get(\"login\"),\r\n\t\tpassword: data.get(\"password\"),\r\n\t};\r\n\r\n\t//Here in real we should have request to the server that will give us the response,\r\n\t//provide additional validation and return auth token;\r\n\r\n\tif (authData.login !== \"admin\" || authData.password !== \"12345\") {\r\n\t\treturn { error: true };\r\n\t}\r\n\r\n\treturn { error: false };\r\n};\r\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledLoginWrapper","_templateObject2","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","error","setError","dispatch","useAppDispatch","data","useActionData","t","useTranslation","navigate","useNavigate","useEffect","logIn","_jsxs","children","_jsx","method","TextField","id","label","defaultValue","name","FormControl","variant","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","Button","Login","action","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","request","authData","wrap","_context","prev","next","formData","sent","login","get","password","abrupt","stop","_x","apply","arguments"],"sourceRoot":""}